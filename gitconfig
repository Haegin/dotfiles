[alias]
  co = checkout
  cob = !"git branch -l --format '%(refname:short)' --sort=-committerdate | fzf --preview 'git log --oneline --decorate --color {}' | xargs -n1 git co"
  st = status -s -- .
  cm = commit --verbose
  dt = difftool
  lg1 = log --format=format:'%C(blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(white)— %C(bold cyan)%an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
  lgraph = lg1 --graph
  lg2 = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)— %an%C(reset)' --abbrev-commit
  lg = !"git lg1 --color | fzf --ansi | cut -d' ' -f 1 | xargs git show --quiet --pretty=medium"
  lastlog = log -p -n1
  difflog = log -p
  blame = 'blame -w -M -C'
  ctags = !.git/hooks/ctags
  conflicts = diff --name-only --diff-filter=U
  unstaged = ls-files -dm
  staged = diff --cached
  sha = rev-parse --verify HEAD
  # From durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples
  ls = log --pretty=format:"%C(magenta)%h%C(red)%d\\ %C(reset)%s%C(blue)\\ [%cn]" --decorate
  ll = log --pretty=format:"%C(magenta)%h%C(red)%d\\ %C(reset)%s%C(blue)\\ [%cn]" --decorate --stat
  lb = log --graph --format=format:'%C(blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative main..HEAD
  lm = log --graph --format=format:'%C(blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative master..HEAD
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
  ld = log --pretty=format:"%C(magenta)%h\\ %C(yellow)%ad%C(red)%d\\ %C(reset)%s%C(blue)\\ [%cn]" --decorate --date=relative
  lds = log --pretty=format:"%C(magenta)%h\\ %C(yellow)%ad%C(red)%d\\ %C(reset)%s%C(blue)\\ [%cn]" --decorate --date=short
  le = log --oneline --decorate
  l5 = lg -n 5
  filelog = log -u
  fl = log -u
  dl = "!git ll -1"
  dlc = diff --cached HEAD^
  # Full content of a diff given a revision
  dr = "!f() { git diff "$1"^.."$1"; }; f"
  lc  = "!f() { git ll "$1"^.."$1"; }; f"
  diffr  = "!f() { git diff "$1"^.."$1"; }; f"
  dc = diff --cached
  pr = pull-request
  current-branch = git rev-parse --abbrev-ref HEAD
  please = push --force-with-lease
  shove = push --no-verify
  expunge = !"git branch --merged | egrep -v \"(^\\*|master|main|dev)\" | xargs git branch -d"
  fix = !"git cm --amend --no-edit"
  git = !"exec git"
  up = pull --rebase --autostash
  ap = add --patch
  prs = !"hub pr list -f '%Cmagenta%i%Creset : [%Cyellow%au%Creset] %sC%t%Creset (%Cblue%U%Creset)\n'"
  pr-url = !"hub pr list -h $(git rev-parse --abbrev-ref HEAD) -f '%U\n'"
  work-email = !"git config user.email harry.porter-mills@relayplatform.com && git commit --amend --no-edit --reset-author"
  my-email = "config user.email harry@portermills.net"
  ; recent-branches = !"git reflog | sed -E -e \"/checkout/!d\" -e \"/rebase/d\" -e \"s/.*moving from (.*) to .*/\\1/\" | head -n 5 | sort -u"
  recent = !"git branch --sort=-committerdate | head -n 5"
  recent-branches = !"git branch -l --format '%(refname:short)' --sort=-committerdate | fzf --preview 'git le --color {}'"
  info = "show --quiet --pretty=short"
  sc = "switch -c"
  sw = "switch"
  resolve = "!$EDITOR $(git diff --name-only --diff-filter=U)"
  gcd = "checkout develop"
  dpr="pull-request -b develop -r relayplatform/engineers -p"
  mpr="pull-request -b main -p"
  hotfix="pull-request -b main -p -l Hotfix"
  hide="update-index --assume-unchanged"
  unhide="update-index --no-assume-unchanged"

[url "git@github.com:"]
	insteadOf = https://github.com/

[url "git@github.com:instacart/"]
  insteadOf = ic:

[url "git@bitbucket.org:"]
  insteadOf = bb:

[core]
  pager = delta
  trustctime = false
  excludesfile = ~/.config/git/ignore
	whitespace = trailing-space,space-before-tab
	commitGraph = true

[interactive]
  diffFilter = delta --color-only

[delta]
  navigate = true
  side-by-side = true
  line-numbers = true
  ;syntax-theme = "Monokai Extended"

[push]
	default = simple
  autoSetupRemote = true

[pull]
  rebase = true

[color]
  branch = auto
  diff = auto
  grep = auto
  interactive = auto
  ui = true
  status = auto
  showbranch = auto

[diff]
  colorMoved = default
  algorithm = histogram
  compactionHeuristic = true
	mnemonicprefix = true
  ; tool = nvimdiff

; [difftool "nvimdiff"]
;   cmd = nvim -d -f $LOCAL $REMOTE

;   algorithm = histogram
;   compactionHeuristic = true

[difftool]
  prompt = false

[merge]
  conflictStyle = zdiff3
  ff = false
  log = true
	stat = true

[branch "main"]
  mergeoptons = --no-ff

[branch "master"]
  mergeoptons = --no-ff

[rerere]
  enabled = true

[init]
  templatedir = ~/.git_template
  defaultBranch = main

[help]
  autocorrect = 1

[rebase]
  updateRefs = true
  autoStash = true
  autosquash = true

[user]
  name = Harry Porter-Mills
  signingkey = DE31544B9C530DD8
  email = "harry.porter-mills@instacart.com"

[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22
[color "diff"]
  meta = 11
  frag = magenta bold
  func = 146 bold
  commit = yellow bold
  old = red bold
  new = green bold
  whitespace = red reverse
[diff "rails_credentials"]
	textconv = bin/rails credentials:diff
[http]
	postBuffer = 524288000
[mergetool]
	keepBackup = false
[credential]
	helper = osxkeychain
[feature]
	manyFiles = 1


[includeif "gitdir: ~/dev/haegin/"]
  path = "~/.config/git/personal"

[includeif "gitdir: ~/dev/instacart/"]
  path = "~/.config/git/instacart"
[includeif "gitdir: /home/bento/"]
  path = "~/.config/git/instacart"
[remote "origin"]
	prune = true
[gc]
	writeCommitGraph = true
[fetch]
	writeCommitGraph = true
[checkout]
	workers = 0
